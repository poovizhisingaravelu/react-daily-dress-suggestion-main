{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\velu\\\\Desktop\\\\react-daily-dress-suggestion-main\\\\src\\\\components\\\\Question.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport img1 from '../images/img1.jpg';\nimport img2 from '../images/img2.jpg';\nimport img3 from '../images/img3.jpg';\nimport img4 from '../images/images.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:3000';\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nconst Question = () => {\n  _s();\n\n  const urlAPI = 'Wearing white or silver-colored clothes on Monday calms your mind. if you are not getting peace of mind then these colors would be best for you. When you start wearing them, you will gradually start getting positive results.';\n  const [sentences, setSentences] = useState([]); // const [images, setImages] = useState([]);\n\n  const images = [{\n    img: img1\n  }, {\n    img: img2\n  }, {\n    img: img3\n  }, {\n    img: img4\n  }];\n  useEffect(() => {\n    axios.get(urlAPI, {\n      params: {\n        type: 'meat-and-filler',\n        sentences: 1\n      }\n    }).then(res => {\n      setSentences(res.data);\n    }); // axios.get(urlAPI_image).then((res) => {\n    // console.log(res.data);\n    // setImages(res.data);\n    // });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      bgcolor: 'background.paper',\n      pt: 8,\n      pb: 6\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h3\",\n        align: \"center\",\n        color: \"text.primary\",\n        gutterBottom: true,\n        children: \"Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"left\",\n        color: \"text.secondary\",\n        paragraph: true,\n        children: [\"Question: \", sentences[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n        variant: \"masonry\",\n        cols: 3,\n        gap: 8,\n        children: images.map(item => /*#__PURE__*/_jsxDEV(ImageListItem, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${item.img}?w=248&fit=crop&auto=format`,\n            srcSet: `${item.img}?w=248&fit=crop&auto=format&dpr=2 2x`,\n            alt: item.title,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, item.img, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        sx: {\n          pt: 4\n        },\n        direction: \"row\",\n        spacing: 2,\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          component: RouterLink,\n          to: \"/main\",\n          children: \"Previous Queston\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: RouterLink,\n          to: \"/main\",\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"Hkx33KjYHjbENro7mFvzzCwBrRk=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/velu/Desktop/react-daily-dress-suggestion-main/src/components/Question.jsx"],"names":["React","useState","useEffect","axios","Link","RouterLink","Box","Button","Stack","Typography","Container","ImageList","ImageListItem","img1","img2","img3","img4","defaults","baseURL","headers","post","Question","urlAPI","sentences","setSentences","images","img","get","params","type","then","res","data","bgcolor","pt","pb","map","item","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport img1 from '../images/img1.jpg';\nimport img2 from '../images/img2.jpg';\nimport img3 from '../images/img3.jpg';\nimport img4 from '../images/images.jpg';\n\naxios.defaults.baseURL = 'http://localhost:3000';\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nconst Question = () => {\n  const urlAPI =\n    'Wearing white or silver-colored clothes on Monday calms your mind. if you are not getting peace of mind then these colors would be best for you. When you start wearing them, you will gradually start getting positive results.';\n\n  const [sentences, setSentences] = useState([]);\n  // const [images, setImages] = useState([]);\n  const images = [{ img: img1 }, { img: img2 }, { img: img3 }, { img: img4 }];\n  useEffect(() => {\n    axios\n      .get(urlAPI, {\n        params: {\n          type: 'meat-and-filler',\n          sentences: 1,\n        },\n      })\n      .then((res) => {\n        setSentences(res.data);\n      });\n\n    // axios.get(urlAPI_image).then((res) => {\n    // console.log(res.data);\n    // setImages(res.data);\n    // });\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        bgcolor: 'background.paper',\n        pt: 8,\n        pb: 6,\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"h1\"\n          variant=\"h3\"\n          align=\"center\"\n          color=\"text.primary\"\n          gutterBottom\n        >\n          Question\n        </Typography>\n        <Typography variant=\"h5\" align=\"left\" color=\"text.secondary\" paragraph>\n          Question: {sentences[0]}\n        </Typography>\n        <ImageList variant=\"masonry\" cols={3} gap={8}>\n          {images.map((item) => (\n            <ImageListItem key={item.img}>\n              <img\n                src={`${item.img}?w=248&fit=crop&auto=format`}\n                srcSet={`${item.img}?w=248&fit=crop&auto=format&dpr=2 2x`}\n                alt={item.title}\n                loading=\"lazy\"\n              />\n            </ImageListItem>\n          ))}\n        </ImageList>\n        <Stack\n          sx={{ pt: 4 }}\n          direction=\"row\"\n          spacing={2}\n          justifyContent=\"center\"\n        >\n          <Button variant=\"outlined\" component={RouterLink} to=\"/main\">\n            Previous Queston\n          </Button>\n          <Button variant=\"contained\" component={RouterLink} to=\"/main\">\n            Next Question\n          </Button>\n        </Stack>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}